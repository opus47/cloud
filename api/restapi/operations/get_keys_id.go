// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetKeysIDHandlerFunc turns a function with the right signature into a get keys ID handler
type GetKeysIDHandlerFunc func(GetKeysIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetKeysIDHandlerFunc) Handle(params GetKeysIDParams) middleware.Responder {
	return fn(params)
}

// GetKeysIDHandler interface for that can handle valid get keys ID params
type GetKeysIDHandler interface {
	Handle(GetKeysIDParams) middleware.Responder
}

// NewGetKeysID creates a new http.Handler for the get keys ID operation
func NewGetKeysID(ctx *middleware.Context, handler GetKeysIDHandler) *GetKeysID {
	return &GetKeysID{Context: ctx, Handler: handler}
}

/*GetKeysID swagger:route GET /keys/{id} getKeysId

Get key information

Get key information

*/
type GetKeysID struct {
	Context *middleware.Context
	Handler GetKeysIDHandler
}

func (o *GetKeysID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetKeysIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
