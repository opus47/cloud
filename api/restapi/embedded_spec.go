// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "opus47",
    "license": {
      "name": "Apache 2.0"
    },
    "version": "1.0.0"
  },
  "host": "opus47.goodwu.net",
  "basePath": "/",
  "paths": {
    "/composers": {
      "get": {
        "description": "List composers",
        "summary": "List composers",
        "security": null,
        "responses": {
          "200": {
            "description": "List of composers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Composer"
              }
            }
          }
        }
      }
    },
    "/composers/{id}": {
      "get": {
        "description": "Get composer information",
        "summary": "Get composer information",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Composer information",
            "schema": {
              "$ref": "#/definitions/Composer"
            }
          }
        }
      },
      "put": {
        "description": "Add or update a composer",
        "summary": "Add or update a composer",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API access authorization in JWT access token format",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "The composer to add or update",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Composer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Composer updated"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "description": "Delete a composer",
        "summary": "Delete a composer",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API access authorization in JWT access token format",
            "name": "authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Composer deleted"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/keys": {
      "get": {
        "description": "List keys",
        "summary": "List keys",
        "security": null,
        "responses": {
          "200": {
            "description": "List of keys",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Performance"
              }
            }
          }
        }
      }
    },
    "/keys/{id}": {
      "get": {
        "description": "Get key information",
        "summary": "Get key information",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Key information",
            "schema": {
              "$ref": "#/definitions/Key"
            }
          }
        }
      },
      "put": {
        "description": "Add or update a key",
        "summary": "Add or update a key",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API access authorization in JWT access token format",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "The key to add or update",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Key updated"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "description": "Delete a key",
        "summary": "Delete a key",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API access authorization in JWT access token format",
            "name": "authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Key deleted"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/musicians": {
      "get": {
        "description": "List musicians",
        "summary": "List musicians",
        "security": null,
        "responses": {
          "200": {
            "description": "List of musicians",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Musician"
              }
            }
          }
        }
      }
    },
    "/musicians/{id}": {
      "get": {
        "description": "Get musician information",
        "summary": "Get musician information",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Musician information",
            "schema": {
              "$ref": "#/definitions/Musician"
            }
          }
        }
      },
      "put": {
        "description": "Add or update a musician",
        "summary": "Add or update a musician",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API access authorization in JWT access token format",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "The musician to add or update",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Musician"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Musician updated"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "description": "Delete a musician",
        "summary": "Delete a musician",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API access authorization in JWT access token format",
            "name": "authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Musician deleted"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/parts": {
      "get": {
        "description": "List parts",
        "summary": "List parts",
        "security": null,
        "responses": {
          "200": {
            "description": "List of parts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Part"
              }
            }
          }
        }
      }
    },
    "/parts/{id}": {
      "get": {
        "description": "Get part information",
        "summary": "Get part information",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Part information",
            "schema": {
              "$ref": "#/definitions/Part"
            }
          }
        }
      },
      "put": {
        "description": "Add or update a part",
        "summary": "Add or update a part",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API access authorization in JWT access token format",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "The part to add or update",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Part"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Part updated"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "description": "Delete a part",
        "summary": "Delete a part",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API access authorization in JWT access token format",
            "name": "authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Part deleted"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/performances": {
      "get": {
        "description": "List performances",
        "summary": "List performances",
        "security": null,
        "responses": {
          "200": {
            "description": "List of performances",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Performance"
              }
            }
          }
        }
      }
    },
    "/performances/{id}": {
      "get": {
        "description": "Get performance information",
        "summary": "Get performance information",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Performance information",
            "schema": {
              "$ref": "#/definitions/Performance"
            }
          }
        }
      },
      "put": {
        "description": "Add or update a performance",
        "summary": "Add or update a performance",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API access authorization in JWT access token format",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "The performance to add or update",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Performance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Performance updated"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "description": "Delete a performance",
        "summary": "Delete a performance",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API access authorization in JWT access token format",
            "name": "authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Performance deleted"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/pieces": {
      "get": {
        "description": "List pieces",
        "summary": "List pieces",
        "security": null,
        "responses": {
          "200": {
            "description": "List of pieces",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Piece"
              }
            }
          }
        }
      },
      "put": {
        "description": "Add or update a piece",
        "summary": "Add or update a piece",
        "security": null,
        "parameters": [
          {
            "description": "The piece to add or update",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Piece"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Piece updated"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "403": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/pieces/search": {
      "get": {
        "description": "Search pieces",
        "summary": "Search pieces",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "description": "The search text",
            "name": "text",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of pieces",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Piece"
              }
            }
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/pieces/{id}": {
      "get": {
        "description": "Get pieces information",
        "summary": "Get piece information",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Piece information",
            "schema": {
              "$ref": "#/definitions/Piece"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "post": {
        "description": "Update a piece",
        "summary": "Update a piece",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API access authorization in JWT access token format",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "The piece to add or update",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Piece"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Piece updated"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "description": "Delete a piece",
        "summary": "Delete a piece",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API access authorization in JWT access token format",
            "name": "authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Piece deleted"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/pieces/{id}/performances": {
      "get": {
        "description": "Get all the performances of a piece",
        "summary": "Get all the performances of a piece",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Piece information",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Performance"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/recordings": {
      "get": {
        "description": "List recordings",
        "summary": "List recordings",
        "security": null,
        "responses": {
          "200": {
            "description": "List of recordings",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Recording"
              }
            }
          }
        }
      }
    },
    "/recordings/{id}": {
      "get": {
        "description": "Get recording information",
        "summary": "Get recording information",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Recording information",
            "schema": {
              "$ref": "#/definitions/Recording"
            }
          }
        }
      },
      "put": {
        "description": "Add or update a recording",
        "summary": "Add or update a recording",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API access authorization in JWT access token format",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "The recording to add or update",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Recording"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recording updated"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "description": "Delete a recording",
        "summary": "Delete a recording",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "API access authorization in JWT access token format",
            "name": "authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Recording deleted"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "Composer": {
      "properties": {
        "first": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "last": {
          "type": "string"
        },
        "middle": {
          "type": "string"
        }
      }
    },
    "ErrorMessage": {
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Key": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Movement": {
      "properties": {
        "id": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Musician": {
      "properties": {
        "first": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "last": {
          "type": "string"
        },
        "middle": {
          "type": "string"
        }
      }
    },
    "Part": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Performance": {
      "properties": {
        "date": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "performers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Performer"
          }
        },
        "recordings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Recording"
          }
        },
        "venue": {
          "type": "string"
        }
      }
    },
    "Performer": {
      "properties": {
        "id": {
          "type": "string"
        },
        "musician": {
          "type": "string"
        },
        "part": {
          "type": "string"
        }
      }
    },
    "Piece": {
      "properties": {
        "catalog": {
          "type": "string"
        },
        "composer": {
          "$ref": "#/definitions/Composer"
        },
        "id": {
          "type": "string"
        },
        "key": {
          "$ref": "#/definitions/Key"
        },
        "movements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Movement"
          }
        },
        "number": {
          "type": "integer"
        },
        "parts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Part"
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Recording": {
      "properties": {
        "file": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "movement": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "performance": {
          "type": "string"
        }
      }
    }
  }
}`))
}
